version: "3"

services:
  # simulator:
  #   build: .
  #   container_name: simulator
  #   volumes:
  #     - ./packages/simulator:/src
  #     - ../../node_modules:/src/node_modules
  #   extra_hosts:
  #     - "host.docker.internal:172.17.0.1"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #     - "9094:9094"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   extra_hosts:
  #     - "host.docker.internal:172.17.0.1"

  # kafka-topics-generator:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - kafka
  #   command: >
  #     bash -c
  #       "sleep 5s &&
  #       kafka-topics --create --topic=route.new-direction --if-not-exists --bootstrap-server=localhost:9092 &&
  #       kafka-topics --create --topic=route.new-position --if-not-exists --bootstrap-server=localhost:9092"
  
  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:latest
  #   hostname: control-center
  #   depends_on:
  #    - kafka
  #   ports:
  #     - "9021:9021"
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: 'localhost:9092'
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     PORT: 9021
  
  # nest-api:
  #   build:
  #     context: ../packages/nest-api
  #   container_name: nest-api
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ../packages/nest-api:/home/node/app
  #     - ../node_modules:/home/node/app/node_modules
  #   extra_hosts:
  #     - "host.docker.internal:172.17.0.1"
  #   command: "npm run start:dev"
  #   depends_on:
  #     - db

  db:
    image: mongo:latest
    restart: always
    volumes:
     - ./dbdata:/data/db
     - ./mongo:/docker-entrypoint-initdb.d
    environment:
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=root
     - MONGO_INITDB_DATABASE=nest

  mongo-express:
    image: mongo-express
    restart: always
    ports:
     - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_SERVER=db
     - ME_CONFIG_MONGODB_AUTH_USERNAME=root
     - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
     - ME_CONFIG_MONGODB_ADMINUSERNAME=root
     - ME_CONFIG_MONGODB_ADMINPASSWORD=root
    depends_on:
     - db